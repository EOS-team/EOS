== PlasticWkExplFullEmpty ==
[title]Your workspace is empty and your repo is empty too[/title]

[bold]Do you want to add an existing project?[/bold]
1. Right click on the workspace path in the list above.
2. Select "Open". (Just remember that we do use context menus; it will be useful in the future.)
3. This will open [windows]Windows Explorer[/windows][macos]Finder[/macos][linux]File Explorer[/linux].
4. Copy or move your project into your workspace.
5. Once you are done, go to "{viewname}" to check in the initial code to your repo.

[bold]Protip[/bold]: Do you need to add a huge project? (+300k files / several Gigabytes). 
If that's the case, you can import it faster using the command line:
1. Copy or move your project to your workspace.
2. Open a command prompt and go to your workspace.
3. Use the following command to check in everything in a single step (change the comment :P):

[bold]cm ci --all -c "This is the initial import"[/bold]


[bold]Want to join an existing project instead?[/bold]
1. Then, go to the "Repositories" view.
2. Find the repo you want to work in.
3. Right click on it to create a workspace for it.
(There are other ways to do it, but this is the easiest.)

[bold]Want to clone/pull a remote repo?[/bold]
1. Go to the Branch Explorer.
2. Right click on the main branch.
3. Select "Replication/Pull this branch".
Or create a sync view to pull more than one branch.

== PlasticWkExplGeneralHelp ==
[title]An intro to the Explorer[/title]

This view is just like a [windows]Windows Explorer[/windows][macos]Finder[/macos][linux]File Explorer[/linux] decorated with version control information.

It is very useful to [help:PlasticWkExplExplainSearch]find files[/help].

You can also delete files, rename, checkout, move, show history, and perform many others actions.

[bold]Tip[/bold]: Check the context menu of the files.

== PlasticWkExplRunUpdate ==
[title]There is content in your repository waiting to be downloaded[/title]

Just click [action:UpdateWorkspace]Update workspace[/action] to get the latest changes.

[bold]Familiar with Git?[/bold] What Git calls [italic]checkout[/italic], we call [italic]update[/italic].

== PlasticWkExplExplainSearch ==
[title]You can find files at the speed of light with the built-in search[/title]

Just type [windows]CTRL-F[/windows][macos]Command-F[/macos][linux]CTRL-F[/linux] to set the focus on the 'Search' field and start using it.

== PlasticWkExplWorkingOnChangeset ==
[title]"Update workspace" not getting latest?[/title]

I detected that you're trying to update your workspace but you're working on a changeset.

When you switch to a changeset, the last changes on the branch won't be downloaded when you update your workspace. You need to switch to the branch if you want to download new changes.

Learn more about the single branch workflow [link:https://plasticscm.com/book/#_conflicts_during_checkin_working_on_a_single_branch]here[/link].

== PlasticPendingChangesEmptyState ==
[title]No changes detected in your workspace[/title]

Finding changes took {totaltime}. {description}

== PlasticPendingChangesOnboarding ==
[title]This is the "{viewname}" view[/title]

{viewname} is what you will use to check in changes, add new files, and check in moves, renames and deletes.

This is probably one of the features you will use most often.

It can do amazing things like accurately finding moved files.

Find out more about [link:https://www.plasticscm.com/download/help/pendingchangesview]{viewname} here[/link].

== PlasticPendingChangesOptionWarningCheckouts ==
[title]No pending changes but...[/title]

You are only showing checkouts, not finding changes on disk.

In case this is not the behavior you expected, click the [action:PendingChangesOpenOptions]Options[/action] button and change the settings.

== PlasticPendingChangesFrustrationFilter ==
[title]There are pending changes, but you have an active filter...[/title]

[action:PendingChangesRemoveFilter]Remove the filter[/action] or change it if these are not the results you expected.

== PlasticPendingChangesFrustrationRefreshNoFilter ==
[title]Are you missing any changes?[/title]

Review the [action:PendingChangesOpenOptions]Options[/action] just in case.

== PlasticPendingChangesWithAdded ==
[title]You have some files ready to be added to version control[/title]

Files not yet added to version control are marked as "Private" in the "Status" column.

Some privates are better if they are ignored, so that they do not show up in {viewname} again and again.

Simply right click the files to ignore and select "Add to ignored".

Find out more about ignored files, hidden changes, and other configuration options [link:https://plasticscm.com/download/help/ignored-hidden-etc]here[/link].

== PlasticPendingChangesDotPrivate ==
[title]I had to rename some of your files to .private[/title]
Do not panic! These are copies that Unity VCS creates to preserve files that it can't overwrite during an update.

Suppose you have a private file "src/foo.c" and you switch your workspace to a branch where someone added "src/foo.c". Unity VCS downloads the new file because it is under source control and yours is not. But, it can't delete yours, so it renames it to .private.0.

Make sense?

== PlasticPendingChangesMovedOnlyFiles ==
[title]I detected that you moved files locally[/title]

When you move/rename a file in your workspace, Unity VCS tries to match it with the old one to figure out if it is the same one. The similarity column reflects that.

You can tweak the % required for a match in [action:PendingChangesOpenOptions]Options[/action].

If the new file is too different, Unity VCS thinks you simply deleted the old and added a new one.

[bold]Tip[/bold]: If you are reorganizing your project structure and you need Unity VCS to know this instead of guessing the moves, you can perform the moves in Workspace Explorer by cutting/pasting.

Become a master in moves and renames by [link:https://plasticscm.com/download/help/moveandrenames]reading this[/link].

== PlasticPendingChangesMovedOnlyDirectories ==
[title]I detected moved directories[/title]

Unity VCS can track moved directories because it compares how similar their contents are.

So, if you simply rename a directory in your workspace (not using Unity VCS, just with [windows]Windows Explorer[/windows][macos]Finder[/macos][linux]File Explorer[/linux] or the command line), Unity VCS checks if its contents match up with the old contents. If it does, then it is a move.

If the contents change, Unity VCS can still detect the move up to a given similarity threshold that you can tweak in [action:PendingChangesOpenOptions]Options[/action].

Become a master in [link:https://plasticscm.com/download/help/moveandrenames]moves and renames by reading this[/link].

== PlasticPendingChangesMovedFilesAndDirectories ==
[title]So, you are moving files and directories[/title]

Unity VCS is quite good at detecting and tracking moves.

* Learn more about [help:PlasticPendingChangesMovedOnlyFiles]file move[/help] detection.

* Learn more about [help:PlasticPendingChangesMovedOnlyDirectories]directory move[/help] detection, because they are detected differently than file moves.

[bold]Tip[/bold]: If you are reorganizing your project structure and you need Unity VCS to know this instead of guessing the moves, you can perform the moves from Workspace Explorer by cutting/pasting.

Become a master in moves and renames by [link:https://plasticscm.com/download/help/moveandrenames]reading this[/link].

== PlasticPendingChangesAddedDeleted ==
[title]Are you missing a move?[/title]

I detected that you have added and deleted files/directories.

Maybe, this is exactly what you did. If that's the case, sorry to bother you.

But, sometimes added/deleted pairs mean undetected moves.

If you want to match added/deleted and mark them as a move, then right click on the added and select "Search matches".

You can also tweak the similarity move detection setting under [action:PendingChangesOpenOptions]Options[/action].

Become a master in moves and renames by [link:https://plasticscm.com/download/help/moveandrenames]reading this[/link].

== PlasticPendingChangesSlowTooManyPrivates ==
[title]{viewname} view can be faster with fewer private files[/title]

Finding changes took {totaltime}. This is too much.

You have too many private files in your workspace. These are files that are not under version control, probably config files, intermediate build files and so on.

To speed up the calculation:

* You can add them to ignore.conf:
1. Just right click on the file(s).
2. Select "Add to ignored".

* Alternatively, you can hide them in {viewname} view:
1. Just open [action:PendingChangesOpenOptions]Options[/action].
2. Deselect "Show private files". 
  The downside of this is that new files to be added to version control won't be displayed.

[link:https://www.plasticscm.com/download/help/statusperfhintsignoreprivates]Find out more about how to handle private files to speed up change detection[/link].

== PlasticPendingChangesSlowMoveCalculation ==
[title]Move calculation took too long[/title]

Finding changes took too long {totaltime}.

Calculating moves was {movestime}.

You have too many private and locally deleted files, and Unity VCS is spending too much time trying to match them to find moves.

[link:https://www.plasticscm.com/download/help/statusperfhintsmoved]Speed things up by adding them to ignore.conf or disabling move calculation[/link].

== PlasticPendingChangesSlowFindChanges ==
[title]Finding changes took too long[/title]

Finding changes took too long {totaltime}.

The operation should be super fast, so we worry when it is not.

Some possible reasons for this:

* Your hard drive is not fast enough. Do you have a mechanical hard drive? Is there any other process causing high disk usage?
* Antivirus, maybe? Very often antivirus software running on developer machines slows down all version control operations. Double check if the antivirus is using too much CPU or disk IO while finding changes.
* If you are on Windows, check the Windows superfetch service. The superfetch service has been identified as a potential cause of disk performance issues. [link:http://windowsreport.com/service-host-local-service-network-restricted-causing-high-cpu-usage/]Stopping this service may have a positive effect on your computer's performance[/link].

== PlasticPendingChangesMergeInProgress ==
[title]A merge in progress has been detected[/title]

This means that you started a merge ({inprogressmergefrom}) and there are still some files left to process.

You need to finish it before you can check in your changes.

Click to [action:PendingChangesLaunchInProgressMerge]continue the merge[/action] in progress. Otherwise you can [action:PendingChangesUndoChanges]undo[/action] all pending changes and cancel the merge in progress.

== BrExNoDataFound ==
[title]There are no changesets since {fromtimestamp}[/title]

Please change the date range or check the filtering options if you expected results.

== BrExEmptyRepo ==
[title]Your Branch Explorer is empty so far...[/title]
... but soon it will look like [link:https://plasticscm.com/download/help/branchexplorer]this[/link] :)

[bold]Want to pull from a remote repo instead?[/bold]
1. Simply right click on the branch.
2. Select "Replication/Pull this branch".

[bold]Learn how to use branches effectively[/bold]:
[link:https://plasticscm.com/download/help/taskbranches]Read our task-branches tutorial[/link]

== BrExSlowRangeTooBig ==
[title]You can speed up your Branch Explorer[/title]

You can set a much narrower date filter.

This will greatly speed up the data loading and rendering of the Branch Explorer.

== BrExTipUseContextMenu ==
[title]Use the context menu[/title]

Remember, you have context menus available (right click) for branches, changesets, and even merge links.

The context menu has actions to branch, merge, diff, push and pull branches, push/pull to Git, and many more.

== BrExTipOnlyRelevant ==
[title]Psst! Do you know you can hide non-relevant changesets?[/title]

Sometimes you only need the summary, not the details, and focus on what matters.

You can show or hide "non-relevant" changesets (from a topology standpoint) by clicking [action:BrExOnlyRelevant]Only relevant[/action] in the toolbar.

== BrExTipFilterBranches ==
[title]Focus on the branches that you care about[/title]

1. Right click on a branch.
2. Go to the Branch Explorer menu.
3. Select the filtering options.

You can filter the selected branches too.

It is very helpful to handle a much smaller diagram, focusing on what really matters.

== BrExTipCustomColors ==
[title]Give it some color![/title]

There are several options to color the diagram.

You can color changesets per user, or depending on the server they were created on (if you use replica).

You can also add conditional rules to color branches.

Just go to [action:BrExShowOptions]Options[/action] to start.

== BrExTipUseTheSearch ==
[title]Take advantage of the search[/title]

You can use the search box to find changesets by number or GUID.

It is also helpful to find branches and labels.

Partial search works fine, and you can navigate multiple matches too.

== BrExGeneralIntro ==
[title]What is this diagram all about?[/title]

The Branch Explorer is our best attempt to visually explain the repo history.

Each circle is a changeset, and all changesets are inside branches.

Find out more about the [link:https://plasticscm.com/download/help/branchexplorer]Branch Explorer here[/link].

== PlasticLabelsEmptyState ==
[title]Use labels to mark important changesets, typically new releases[/title]
You can create labels from here, but more comfortably from the Branch Explorer:
1. Just right click on the changeset you want to mark.
2. Select "Label this changeset".

[bold]Protip[/bold]: Use a good naming convention to label releases and stick to it.

[bold]Tip for Git users[/bold]: Labels are the equivalent of tags.

== PlasticBranchesEmptyState ==
[title]Unity VCS is all about branches... and merges![/title]
While we prefer the Branch Explorer to the "branch list", sometimes it is useful to find branches quickly.

"main" is the default branch created in Unity VCS. It is the equivalent of Git "master" and Subversion "trunk".

Remember, you can right click on a branch to show the context menu.

[bold]Learn how to use branches effectively[/bold]:
[link:https://plasticscm.com/download/help/taskbranches]Read our task-branches tutorial[/link].

== PlasticChangesetsEmptyState ==
[title]Each time you check in, you create a new changeset[/title]

Changesets have a double function:
1. They record what you checked in.
2. And they are also a snapshot of the entire repo.

Some tips:
* Changesets are identified by a unique "integer" in their repo. But if you use replication, then use the Guid instead.
* Every new repo has a "changeset zero".
* We often refer to changesets as "csets".
* Right click on a changeset to find all the available actions.
* We prefer the Branch Explorer for finding csets, but sometimes this list is good for finding one quickly.
* For Git users: "csets" are the equivalent of "commits".

== PlasticAttributesEmptyState ==
[title]What are attributes?[/title]

Attributes are key/value pairs you can assign to objects in Unity VCS, typically to branches and changesets.

When you create a new attribute here, you create a new "key" that you'll later use to assign values attached to certain objects.

A quick example: mark branches with a "Status" attribute that you can set to "Open", "Resolved", "Tested", "Failed", "Merged", etc.

== PlasticShelvesEmptyState ==
[title]Shelves are temporary changesets with in-progress work[/title]

Shelves are just an option to safely store your changes without really doing a check-in.

They are like a temporary storage.

You can shelve your changes to clean up the workspace, or to apply these changes later on a different branch.

To create them:
1. Go to "Pending Changes".
2. Click the "Shelve" button.

[link:https://plasticscm.com/download/help/shelves]Find out more about how and when you can use shelves[/link].

== PlasticReposExplained ==
[title]A repository stores all the file data and metadata[/title]

A repository contains all the file and directory changes you make, plus their metadata (author, branch, merges info and more).

Every Unity VCS server can host many repositories.

Repos can be local or remote. 

You can work [link:https://plasticscm.com/download/help/distributedvscentralized]centralized or distributed[/link].

You can create repositories from here, list repos from other servers (if you have the rights to do so), and also delete and rename repos.

[windows]Right click on a repo to set permissions, launch the Branch Explorer, list branches and more.[/windows]

You can also create "submodules": repos inside other repos, like "default/subrepo00".

[link:https://plasticscm.com/download/help/repos]Further info about how to use repositories can be found here[/link].

== PlasticWorkspacesExplained ==
[title]Workspaces are your local working copies[/title]

The workspace is where your files are on disk, where you use your IDEs, editors, design programs, etc. to create new contents.

A workspace contains a single working copy taken from the repo. The repo is the database where all the history is stored.

[bold]Tip for Git users[/bold]: In Git, the repo and the working copy are together under the same directory. In Unity VCS, they are separate. In fact, you can have many working copies connected to the same repo.

[link:https://plasticscm.com/download/help/workspaces]Further info about how to use workspaces can be found here[/link].

== PlasticCloudEditionGeneralHelp ==
[title]Your list of Cloud Edition repos[/title]

Here you see the list of repos in your Cloud Edition organization.

You can use this view to create more repos, rename and delete if needed.

[windows]You can also set permissions from here. Use the context menu on the repo.[/windows]

== PlasticCloudExplained ==
[title]Did you know Unity VCS Cloud?[/title]

We offer a Cloud hosting service.

You can have Cloud hosted repos and check in/update directly (centralized) or push/pull (distributed).

If you are sure you already belong to a Cloud organization:
1. Type it in the "Server" area. It will be something like robotmaker@cloud if your org is named robotmaker.
2. Then click "Refresh" to reload the repos. You'll be prompted for credentials if needed.

[link:https://plasticscm.com/download/help/cloudextension]More details about Unity VCS Cloud extension can be found here[/link].

== PlasticCloudEmptyOrganization ==
[title]Your organization name is empty[/title]
It seems you don't have a [bold]Unity VCS Cloud organization[/bold] yet. If you are sure you have an organization, maybe your current user doesn't belong to it yet. Simply [bold]type it in the Server above[/bold]. Remember, if your organization is named [italic]robotmaker[/italic] type [italic]robotmaker@cloud[/italic].

== PlasticSyncDistributedCloudProject ==
[title]How to sync your changes?[/title]
1. Pull the branches you need from your Cloud repository. (Remember, you normally don't need a full clone.)
2. And when you're done, switch to a branch to start working.

== PlasticMergeNoConflicts ==
[title]This is just an easy merge[/title]

There are no conflicts, so all you have to do is to click [action:MergeProcessAllMerges]Apply changes[/action] to merge the branch.

Click [action:MergeExplainMerge]Explain merge[/action] to get a better understanding of how the merge works and to learn what contributors are.

Use the context menu of the files and check the available options.

[link:https://plasticscm.com/download/help/merges]More details about merges can be found here[/link].

== PlasticMergeIncomingFromCheckin ==
[title]Why can't I check in?[/title]

Because there are [bold]new changes[/bold] in your working branch.

You need to update to latest before completing your check-in (and resolve conflicts, if any).

Once you are done updating and solving conflicts, just go to the pending changes view and check in.

== PlasticMergeIncomingFromUpdate ==
[title]Why can't I update?[/title]

Because there are [bold]new changes[/bold] in your working branch and you changed files in your workspace.

You need to update (and resolve conflicts, if any) your pending changes with the latest changes in the branch 

Once you are done, your workspace will be updated to the latest version on the working branch.

== PlasticMergeWithConflicts ==
[title]You got conflicts to solve![/title]

[bold]Protip[/bold]: Just click [action:MergeProcessAllMerges]Resolve conflicts[/action] to start solving all possible merge conflicts.
(No need to right click on each file and launch the merge one by one.)

For advanced options, check the context menu of each file in conflict.

Click [action:MergeExplainMerge]Explain merge[/action] to get a better understanding of how the merge works and to learn what contributors are.

[link:https://plasticscm.com/download/help/merges]More details about merges can be found here[/link].

== PlasticMergeWithDirectoryConflicts ==
[title]You got directory conflicts![/title]

Don't panic, Unity VCS is very good handling this.

This happens when the directory structure needs to be merged.

For example, if you rename the same file divergently in two branches.

Simply choose the right "Resolution method".

If this is new to you, take your time to [link:https://www.plasticscm.com/download/help/directorymerges]read more about the possible directory merge conflicts[/link] before moving forward.

== PlasticMergeRecursiveMergeDetected ==
[title]You hit the jackpot[/title]
You have a recursive merge conflict.

No worries, but this is a difficult one, because the 3-way merge tool can potentially show up more than once.

All you need to do is click "Resolve conflicts" as usual.

But, if recursive merges are new for you, you better [link:https://plasticscm.com/download/help/recursivemerge]learn more about recursive merges[/link] first.

You will have graduated from merge school after this.

== PlasticMergeServerSideMergeFinished ==
[title]Merge finished[/title]

Click [action:MergeProcessAllMerges]Check in merge![/action] to [bold]submit the merge[/bold] to the repository.

[action:MergeCloseView]Close[/action] to cancel it.

== PlasticMergeGeneralHelp ==
[title]Merge preview[/title]

This is the preview of the merge.

It helps you understand what is going to be merged
and also solve the possible conflicts.

Explore the context menus of every element to
really understand the options.

[bold]Protip[/bold]: Use "Resolve conflicts"
instead of merging files one by one.

== PlasticWkExplPendingChangesUnityFirstTime ==
[title]Useful tips to work with Unity[/title]

* Configure locking. Most likely you want the .prefabs to be exclusively locked. Go to the [action:WebAdminOpenInLocks]WebAdmin and configure locks[/action].
* Use checkouts. Locking requires that you checkout (lock) the files before editing. Checkout is the action to tell Unity VCS "I'm going to modify the file". It is available from the right-click menu of each file.
* Configure the files to ignore. There are files that you don't want to add to version control. [action:IgnoreConfCreateUnity]Click here[/action] to create a ignore.conf for Unity. [link:https://plasticscm.com/download/help/ignored-hidden-etc]Learn more about ignore.conf[/link].

== PlasticWkExplPendingChangesVisualStudioFirstTime ==
[title]Tips to work with Visual Studio projects[/title]
It is helpful to ignore the "bin" and "debug" directories, and also certain files like ".csproj.user".

[action:IgnoreConfCreateVisualStudio]Click here[/action] to add the right rules to your ignore.conf and get a better experience using Visual Studio :-)

== PlasticQueryViewsExplainFilterAndAdvanced ==
[title]Quickly filter the list by typing a "filter" above[/title]

The filter works locally on the query results.

[bold]Filter tip[/bold]: Use [italic]field_name[/italic]:value to filter by a given field. 
For example: 
  "created by:maria"
  "creation date:10/25/2018"
  name:111923

You can also customize the query by clicking [action:QueryViewClickAdvanced]Advanced[/action].

Learn more about queries [link:https://plasticscm.com/download/help/cmfind]here[/link].

Remember, there are extra options in the context menu of the elements in the list (just right click).

== PlasticQueryViewsFrustrationCustomQuery ==
[title]You have a custom query enabled[/title]

That's maybe why you are not finding what you are looking for :-O

Click on [action:QueryViewClickAdvanced]Advanced[/action] to customize it.

== PlasticFrustrationFilterEnabled ==
[title]You have a filter enabled[/title]

That's maybe why you are not finding what you are looking for :-O

== PlasticNewVersionAvailableWithDownloadAction ==
[title]A new version is available[/title]

[bold]New {version} - {releaseDate}[/bold] ({versionsBehind})

[action:DownloadNewVersion]Download[/action] - [link:{releaseNotesLink}]View release notes[/link]

{releaseNotes}

== PlasticNewVersionAvailable ==
[title]A new version is available[/title]

[bold]New {version} - {releaseDate}[/bold] ({versionsBehind})

[link:{downloadLink}]Download[/link] - [link:{releaseNotesLink}]View release notes[/link]

{releaseNotes}

== PlasticPendingChangesMerge ==
[title]You have a merge ready to check in[/title]

Do you know what the status column means during merge?

You'll notice that the merged files are marked as "Status / Merge from cset number" to differentiate them from other local changes you might have.

* [bold]Checked-out[/bold]: The file was merged, because it was modified concurrently. The merge might have been automatic, but a merge still happened.

* [bold]Replaced[/bold]: The file already existed in your branch, but, was replaced by a newer version. No conflict happened.

* [bold]Copied (new)[/bold]: The file didn't exist in your branch and was created during the merge (bringing it from the source of the merge).

* [bold]Removed[/bold]: The file was deleted during the merge.

There is also info about the merge link that will be created on check-in. It tracks the merge operation that actually happened.

== PlasticPendingChangesMergeEmpty ==
[title]No changes in this merge but...[/title]

You hit a special scenario.

You are merging but the files you already have match the ones that you were trying to merge.

So, there's nothing to check in except the merge link.

The merge link is very important because this way you mark this merge as done, even if no actual files are modified. It is required for merge tracking.

== PlasticPendingChangesAllMergeChangesRequired ==
[title]Files merged together, must be checked in together[/title]

Unity VCS and all modern distributed version control systems work this way: when you merge a branch, you merge it entirely.

This is because Unity VCS needs to mark the branch as merged entirely. It can't just merge a few files, then repeat the cycle later to merge the missing ones.

The reason is that merge links are set between changesets, not individual files.
This design greatly improves merge performance, but at the cost of per-file flexibility.

== PlasticPendingChangesMergeSingleBranch ==
[title]Uh-oh what is this?[/title]

Don't panic! You just completed a merge while working on your branch. Let me explain what happened.

If you just merged a few files, why did all these other files show up?

It is very simple. When you merge to the head of your branch, you bring in the changes made by others.

The files that had to be merged are marked with [bold]Checked-out[/bold] in the Status column.

All the others are marked as:

* [bold]Replaced[/bold]: A file was copied from head to your workspace.

* [bold]Copied (new)[/bold]: A new file that you didn't have was copied to your workspace.

* [bold]Removed[/bold]: The file doesn't exist anymore on head, so it was deleted from your workspace too.

Feel better now? :-)

== PlasticSyncViewGeneralHelp ==
[title]Sync several branches at once[/title]

{viewname} is great to sync many branches in a single step.

Instead of pushing/pulling individual branches you can
create pairs of repos (from different servers if needed)
and then sync in one step.

No need to sync the full repo, you can filter the branches
you want.

It is very useful with Xlinks because you can refresh and
filter by a given branch name and push/pull all the matching
branches together.

[link:https://plasticscm.com/download/help/syncview]Learn more about the SyncView here[/link].

== CodeReviewWindowGeneralHelp ==
[title]Review like a pro![/title]

We believe every task must be [link:https://www.plasticscm.com/book/#_review_each_task]reviewed[/link]. And we designed the review around this concept.

[bold]How to do a great review[/bold]
1. Choose the review mode: 'changeset by changeset' or 'entire branch'. Read below for details.
2. You can Request Changes and/or ask Questions to the author.
3. Finally, set the review status: 'Rework required' or 'Reviewed'.

[bold]'Changeset by changeset' and 'entire branch' reviews[/bold]
- Entire branch diffs the full branch. This is the typical review everyone knows.
- 'Changeset by changeset' lets you walk each change. With the right discipline, this is awesome. The author explains each change, telling a story, helping you follow their train of thought. Much better than just going crazy with a 200 change review.

Learn all about how to check in changes keeping reviewers in mind [link:https://www.plasticscm.com/book/#_checkin_often_and_keep_reviewers_in_mind]here[/link].

[bold]How to add comments/Questions/Request Changes[/bold]
In the right side of the diff panel, you can find a clickable vertical bar with a '+' icon. Click it and voilá.

== CodeReviewWindowNewComment ==
[title]Request changes, ask questions[/title]

You can:

1. [bold]Request a change[/bold]: When you need the author to change something before approving. Unity VCS tracks if changes were applied, simplifying your next review cycle.

2. [bold]Ask a question[/bold]: When you need an answer before approving. Unity VCS tracks if questions were answered.

You can also use regular good ol' comments, but changes and questions focus on what matter the most: simplifying the review process so figuring out if something was answered or changed becomes trivial.

== CodeReviewWindowWithPendingComments ==
[title]Answer Questions and solve Change Requests[/title]

1. Check the Change Requests and Questions lists. Double click to view the details.
2. To solve a Change Request: reference its GUID in your check-in comment. Read an example below. You can also take advantage of the combo in "Pending Changes" to fill in the info.
3. Answer any pending Questions by just replying.
4. Finally, when you're done, change the code review status to 'Reviewed'.

[bold]How to apply/close a Change Request[/bold]
To close a Change Request, just use its change request GUID in your check-in comment.
There are two modes:
* Long: [bold][apply-change:516a2741-9069-4c08-983f-71149f0a93c8][/bold]
* Short: [bold][apply-change:516a2741][/bold] (just specifying the first part of the GUID)

== GluonWkExplFullEmpty ==
[title]Your workspace is empty and your repo is empty too[/title]

[bold]Do you want to add an existing project?[/bold]
1. Just copy or move your project into your workspace directory ({workspacepath}).
2. Once you are done, go to "Check in Changes" to check in everything to the repo.

[bold]Want to join an existing project instead?[/bold]
1. Click [action:GluonSwitchWorkspace]Switch Workspace[/action].
2. Then, create a new workspace for the repository you want to work on.

== GluonWkExplSuggestConfigure ==
[title]There is content in your repository waiting to be downloaded[/title]

Just click [action:GluonConfigure]Configure[/action] to setup what you really need to download from the repo.

It lets you select exactly which files to download to your workspace.

== GluonConfigureNoPreviousConfig ==
[title]Load the files you need to work on[/title]

Just browse the repo and select exactly the files or directories you need to work on.

Gluon lets you just download what you need to work on.

This helps with huge repos, because you save tons of space and download time.

[bold]Tip[/bold]: Click [action:GluonConfigSearch]Search[/action] to find files.

== GluonWkExplExplainUpdate ==
[title]There are new versions available to download[/title]

Use [action:GluonUpdateWorkspace]Update[/action] to download all the new versions of the files you have in your workspace.

When there are newer versions for a file, its status column will say "Out of date". You can right click the file to just update it individually instead of the entire workspace as you would do with the Update button.

[bold]Tip[/bold]: When are new files downloaded? Suppose someone adds a new file to the repo. Will it be downloaded when you click Update? If its directory is configured as "fully checked", then it will. But, if it is only partially checked, it will not. Why? Because "partially checked" means that you only wanted to download certain files. So, it won't automatically download all the new ones.

== GluonWkExplNewAddedFilesInRepo ==
[title]New files were added to the repo[/title]

There are new files in the repo that you don't have in your workspace.

You can [action:GluonConfigure]Configure[/action] your workspace and mark them to be downloaded.

== GluonConfigureEmpty ==
[title]Your repo is empty[/title]

Oops! There's nothing to configure because the repo is empty.

Maybe you just want to add your project to this repo.

Or maybe you joined the wrong repo.

[help:GluonWkExplFullEmpty]Check how to add your project to Unity VCS or work with a different repo[/help].

== GluonConfigurePreviousConfig ==
[title]Fine tune your workspace[/title]

* Green tick: Configure a new file or directory to download.
* Red tick: Unconfigure an element.
* Black tick: Something that is already configured to download.
* No tick: Not configured to download to your workspace.
* Partial tick on a directory: It means not all its contents will be downloaded. This happens if you just selected a few files.


Downloading only what you need to work on is very helpful with huge repos, because you save tons of space and download time.

[bold]Tip[/bold]: Click [action:GluonConfigSearch]Search[/action] to find files.

== GluonWkExplExplainSearch ==
[title]You can find files at the speed of light with the built-in search[/title]

Just type [windows]CTRL-F[/windows][macos]Command-F[/macos][linux]CTRL-F[/linux] to show the find dialog.

== GluonWkExplTipUseContextMenu ==
[title]Use the context[/title]

Remember, you have context menus available (just right click).

There are many useful actions there.

== GluonWkExplTipHowToLockFiles ==
[title]Do you know how to lock files?[/title]

Locking happens automatically on [bold]Checkout[/bold].

1. Just right click a file.
2. Select Checkout.

The server will lock the file during checkout if locks are configured for this file type.

[link:https://plasticscm.com/download/help/locking]Read more about locking here[/link].

== GluonWkExplTipUseHistory ==
[title]Did you know the history of the selected file is always available?[/title]

And not only that, you can easily diff versions from there too.

== GluonChangesetsEmptyState ==
[title]Each time you check in, you create a new changeset[/title]

Changesets have a double function:
1. They record what you checked in.
2. And they are also a snapshot of the entire repo.

Some tips:
* Changesets are identified by a unique "integer" in their repo. But if you use replication, then use the Guid instead.
* Every new repo has a "changeset zero".
* We often refer to changesets as "csets".
* Use the context menu to diff changesets.
* For Git users: "csets" are the equivalent of "commits".

== GluonChangesetsExplainFilterAndAdvanced ==
[title]Quickly filter the list by typing a "filter" above[/title]

The filter works locally on the query results.

[bold]Filter tip[/bold]: Use [italic]field_name[/italic]:value to filter by a given field. 
For example: name:13055

You can also customize the query by clicking [action:QueryViewClickAdvanced]Advanced[/action].

Learn more about queries [link:https://plasticscm.com/download/help/cmfind]here[/link].

Remember, you can diff changesets by using the context menu (just right click).

[windows]Protip: You can drag columns to the area above the table to customize how you see the changesets. You can group by day, author, etc.[/windows]

== GluonPendingChangesEmptyState ==
[reference]PlasticPendingChangesEmptyState[/reference]

== GluonPendingChangesOnboarding ==
[reference]PlasticPendingChangesOnboarding[/reference]

== GluonPendingChangesOptionWarningCheckouts ==
[reference]PlasticPendingChangesOptionWarningCheckouts[/reference]

== GluonPendingChangesFrustrationFilter ==
[reference]PlasticPendingChangesFrustrationFilter[/reference]

== GluonPendingChangesFrustrationRefreshNoFilter ==
[reference]PlasticPendingChangesFrustrationRefreshNoFilter[/reference]

== GluonPendingChangesFirstTimeWithAdded ==
[reference]PlasticPendingChangesFirstTimeWithAdded[/reference]
== GluonPendingChangesWithAdded ==
[reference]PlasticPendingChangesWithAdded[/reference]

== GluonPendingChangesMovedOnlyFiles ==
[reference]PlasticPendingChangesMovedOnlyFiles[/reference]

== GluonPendingChangesMovedOnlyDirectories ==
[reference]PlasticPendingChangesMovedOnlyDirectories[/reference]

== GluonPendingChangesMovedFilesAndDirectories ==
[reference]PlasticPendingChangesMovedFilesAndDirectories[/reference]

== GluonPendingChangesSlowTooManyPrivates ==
[reference]PlasticPendingChangesSlowTooManyPrivates[/reference]

== GluonPendingChangesSlowMoveCalculation ==
[reference]PlasticPendingChangesSlowMoveCalculation[/reference]

== GluonPendingChangesSlowFindChanges ==
[reference]PlasticPendingChangesSlowFindChanges[/reference]

== GluonReposExplained ==
[reference]PlasticReposExplained[/reference]

== GluonWorkspacesExplained ==
[reference]PlasticWorkspacesExplained[/reference]

== GluonQueryViewsFrustrationCustomQuery ==
[reference]PlasticQueryViewsFrustrationCustomQuery[/reference]

== GluonFrustrationFilterEnabled ==
[reference]PlasticFrustrationFilterEnabled[/reference]

== GluonWkExplGeneralHelp ==
[reference]PlasticWkExplGeneralHelp[/reference]
